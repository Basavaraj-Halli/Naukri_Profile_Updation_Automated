/*
 * Constructor - configuration of properties
 * 
 * Initialization() - Block Notifications
 *                    Create the instance of WebDriver
 *                    delete all current cookies
 *                    Maximize the window
 *                    Apply pageLoadTimeOuts and ImplicitWaitTime
 *                    open the URL
 * */

package com.naukri.qa.base;

import java.io.FileInputStream;
import java.io.IOException;
import java.time.Duration;
import java.util.Properties;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.asserts.SoftAssert;

import com.naukri.qa.util.UtilComn;

import io.github.bonigarcia.wdm.WebDriverManager;

public class BaseComn {

	public static Properties prop;
	public static WebDriver driver;
	protected SoftAssert assrt;

	public BaseComn() {
		prop = new Properties();
		try {
			FileInputStream fileInp = new FileInputStream(
					"D:\\Naukri\\Naukri\\src\\main\\java\\com\\naukri\\qa\\config\\config.properties");
			prop.load(fileInp);
		} catch (IOException e) {
			e.printStackTrace();
		}

		assrt = new SoftAssert();
	}

	public static WebDriver initialization() {
		// Creating the instance of web driver
		WebDriverManager.chromedriver().setup();
		WebDriver driver = new ChromeDriver();

		// maximize and delete present cookies
		driver.manage().window().maximize();
		driver.manage().deleteAllCookies();

		// Apply timeout settings
		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(UtilComn.PAGE_LOAD_TIME));
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(UtilComn.IMPLICIT_WAIT_TIME));

		// open the URL
		driver.get(prop.getProperty("url"));

		// close the pop-ups
		driver = UtilComn.closeWindowPopUps(driver);
		driver = UtilComn.closeLoginPgPopUps(driver);

		return driver;
	}

}
